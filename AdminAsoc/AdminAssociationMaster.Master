 <%@ Master Language="C#" AutoEventWireup="true" CodeBehind="AdminAssociationMaster.master.cs" Inherits="WebAppNet472.AdminAssociationMaster" %>

<!DOCTYPE html>
<html>
<head runat="server">
    <title><%: Page.Title %> - AsPropManager</title>

    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <asp:ContentPlaceHolder ID="head" runat="server"></asp:ContentPlaceHolder>

   
    <script src="https://unpkg.com/react/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v6.3.0/css/all.css" />

    <style>
     :root {
     --main-colour-dark-blue: #0d1b2a; 
     --main-colour-blue: #1b263b;
     --main-colour-light-blue: #415a77;
     --main-colour-lightest-blue: #778da9;
     --secondary-colour-dark-puple: #3C096C;
     --secondary-colour-purple: #5A189A;
     --secondary-colour-light-purple: #7B2cbf;
     --secondary-colour-lightest-purple: #9D4edd;
 }



 @layer components {
     /* TYPOGRAPHY SETTINGS */
     .poppins {
         font-family: "Poppins", sans-serif;
     }
     .roboto {
         font-family: "Roboto", sans-serif;
     }

     /* BACKGROUND SETTINGS */
     .bg_main_colour_dark_blue {
         background-color: var(--main-colour-dark-blue);
     }
     .bg_main_colour_blue {
         background-color: var(--main-colour-blue);
     }
     .bg_main_colour_light_blue {
         background-color: var(--main-colour-light-blue);
     }
     .bg_main_colour_lightest_blue {
         background-color: var(--main-colour-lightest-blue);
     }
     .bg_secondary_colour_lightest_purple {
         background-color: var(--secondary-colour-lightest-purple);
     }

     .bg-glass {
         background: rgba(255, 255, 255, 0.2);
         border-radius: 10px;
         box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
         backdrop-filter: blur(5px);
         -webkit-backdrop-filter: blur(5px);
         border: 1px solid rgba(255, 255, 255, 0.3);
         padding-block: 1rem;
         padding-inline: 1.25rem;
     }

     .menu_container_grid {}

     .menu_item {
         background-color: var(--main-colour-blue);
         transition: all 0.2s ease-in-out;
         display: flex;
         flex-direction: column;
         align-items: center;
         padding: 2rem;
         justify-content: center;
         gap: 1rem;
         border-radius: 0.375rem;
     }

     .menu_item:hover {
         box-shadow: 0 4px 6px -1px rgba(157, 78, 221, 0.5), 0 2px 4px -2px rgba(157, 78, 221, 0.5);
         transform: scale(0.95);
         cursor: pointer;
     }

     @media screen and (min-width: 624px) {
         .menu_item {
             padding: 1rem;
         }
     }

     @media screen and (max-height: 650px) {
         #main-container {
             transform: scale(0.85);
             transform-origin: top;
         }
         header {
             transform: scale(0.95);
             transform-origin: top;
         }
     }
 }
 </style>
</head>

<body class="w-full h-screen bg_main_colour_dark_blue">
    <form id="form1" runat="server" class="w-full h-auto lg:h-full relative flex flex-col items-center justify-start lg:justify-center gap-8 lg:gap-4 p-4 xl:max-w-[90%] lg:py-[2rem] lg:flex-row lg:m-0 lg:mx-auto">
        <header id="header" class="w-full sticky top-4 z-50 lg:p-4 lg:w-fit lg:h-screen lg:py-4">
            <!-- This is where the React component will be rendered -->
            
        </header>
        <main role="main" class="w-full h-auto" style="scrollbar-width:none;">
            <asp:ContentPlaceHolder ID="MainContent" runat="server"></asp:ContentPlaceHolder>
        </main>
    </form>
    <script type="text/babel">
        // Import React and ReactDOM
        const { useState } = React;

       const Header = () => {
  const [activeItem, setActiveItem] = useState(0);
  const [isSideBarExpanded, setSideBarExpanded] = useState(false);

  const menuItems = [
    {
      icon: "bx bxs-dashboard",
      label: "Acasa",
      href: "/AdminAsoc/AdminAsocDashboard.aspx",
    },
    {
      icon: "bx bxs-info-circle",
      label: "Info",
      href: "#InfoApartamente.aspx",
    },
    { icon: "bx bx-dollar-circle", label: "Cheltuieli", href: "#Login.aspx" },
    { icon: "bx bxs-file-pdf", label: "Rapoarte", href: "#Rapoarte.aspx" },
    { icon: "bx bx-buildings", label: "Apartamente", href: "#InfoApartamente.aspx" },
    { icon: "bx bxs-cog", label: "Setari", href: "#ActualizarePreturiSiCoeficienti.aspx" },
  ];

  return (
   
      <nav
        className={`bg_main_colour_blue h-full w-full flex flex-col gap-4 bg_main-colour_blue shadow-md transition-all lg:justify-between rounded-lg duration-300 ease-in-out`}>
        <div className="hidden lg:flex p-4 justify-between items-center">
          <div className="flex gap-2 items-center text-xl transition-all">
            <i className="bx bx-bar-chart-alt text-3xl text-white"></i>
            <h1
              className={`text-2xl text-white ${
                isSideBarExpanded ? "block" : "hidden"
              }`}>
              AsPropManager
            </h1>
          </div>
        </div>
        <ul
          className={`flex p-2 lg:flex-col gap-2 w-full lg:w-full lg:items-center lg:justify-center ${
            isSideBarExpanded ? "items-start" : "items-center"
          } lg:py-4`}>
          {menuItems.map((item, index) => (
            <li
              key={index}
              onClick={() => setActiveItem(index)}
              className={`relative group flex gap-4 items-center text-white  p-2 ${
                isSideBarExpanded ? "" : "justify-center"
              } w-full rounded-md cursor-pointer transition-colors ${
                activeItem === index
                  ? "bg_glass hover:bg-[#415a77]"
                  : "hover:bg-[#415a77]"
              }`}>
              <a
                href={item.href}
                className="flex items-center gap-4">
                <i className={`${item.icon} text-2xl`}></i>
                <span
                  className={`text-lg ${
                    isSideBarExpanded ? "block" : "hidden"
                  }`}>
                  {item.label}
                </span>
                {activeItem === index && (
                  <div
                    className={`absolute right-0 top-2 w-2 h-2 rounded bg_secondary_colour_lightest_purple ${
                      isSideBarExpanded ? "" : "block"
                    }`}></div>
                )}
                {!isSideBarExpanded && (
                  <div
                    className={`absolute z-50 left-full rounded-md px-2 py-1 bg-slate-100 text-black text-sm invisible opacity-0 -translate-x-3 transition-all lg:group-hover:visible lg:group-hover:opacity-100 lg:group-hover:translate-x-0`}>
                    {item.label}
                  </div>
                )}
              </a>
            </li>
          ))}
          <li
            onClick={() => setSideBarExpanded((prev) => !prev)}
            className={`hidden lg:flex items-center w-full relative p-2 
              rounded-md text-white hover:cursor-pointer ${
                isSideBarExpanded ? "justify-end" : "justify-center"
              }`}>
            <i
              className={`bx bx-chevron-left-square text-3xl transition-transform ${
                isSideBarExpanded ? "" : "rotate-180"
              }`}></i>
          </li>
        </ul>
        <div
          className={`hidden lg:flex p-3 ${
            isSideBarExpanded ? "" : "justify-center"
          }`}>
          <div className=" bg_secondary_colour_lightest_purple p-4 rounded-full"></div>
          <div
            className={`flex justify-between items-center w-52 ml-3 ${
              isSideBarExpanded ? "" : "hidden"
            }`}>
            <div className="leading-4">
              <h4 className="text-white">John Doe</h4>
              <span className="text-xs text-gray-100">johndoe@gmail.com</span>
            </div>
            <i className="fa-solid fa-ellipsis-vertical text-white"></i>
          </div>
        </div>
      </nav>
    
           
            );
        };

      
        ReactDOM.render(<Header />, document.getElementById('header'));
    </script>
</body>
</html>
